<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sp.app.mapper.MemberMapper">
	<select id="loginMember" parameterType="String" resultType="com.sp.app.model.Member">
		SELECT num, id, pwd, nickname, block, reg_date, mod_date, grade, last_login
		FROM member
		WHERE id = #{id} AND enabled != 0
	</select>
	
	<update id="updateLastLogin" parameterType="String">
		UPDATE member SET last_login = SYSDATE
		WHERE id = #{id}
	</update>

	<insert id="insertMember" parameterType="com.sp.app.model.Member">
		INSERT INTO member(num, id, pwd, nickname, block, reg_date, mod_date, grade, enabled)
		VALUES (member_seq.NEXTVAL, #{id}, #{pwd}, #{nickName}, 0, SYSDATE, SYSDATE, 0, 1)
	</insert>
	
	<insert id="insertMemberDetail" parameterType="com.sp.app.model.Member">
		INSERT INTO member_detail(num, name, gender, birth, email1, email2, tel1, tel2, tel3, addr1, addr2, post)
		VALUES (member_seq.CURRVAL, #{name}, #{gender}, #{birth}, #{email1}, #{email2}, #{tel1}, #{tel2}, #{tel3},
			#{addr1}, #{addr2}, #{post})
	</insert>
	
	<select id="findById" parameterType="String" resultType="com.sp.app.model.Member">
		SELECT m.num, id, pwd, nickname, block, grade, enabled, reg_date, mod_date, last_login,
			name, gender, TO_CHAR(birth, 'YYYY-MM-DD') birth, email1, email2, tel1, tel2, tel3, addr1, addr2, post
		FROM member m
		LEFT OUTER JOIN member_detail md ON m.num = md.num
		WHERE id = #{id} 
	</select>
	
	<update id="updateMember" parameterType="com.sp.app.model.Member">
		UPDATE member SET pwd = #{pwd}, mod_date = SYSDATE
		WHERE num = #{num}
	</update>
	
	<update id="updateMemberDetail" parameterType="com.sp.app.model.Member">
		UPDATE member_detail SET email1 = #{email1}, email2 = #{email2}, tel1=#{tel1}, tel2=#{tel2}, tel3=#{tel3},
			birth = #{birth}, addr1 = #{addr1}, addr2 = #{addr2}, post = #{post}
		WHERE num = #{num}
	</update>
	
	<delete id="deleteMember" parameterType="map">
		DELETE FROM member
		WHERE id = #{id};
	</delete>
	
	<delete id="deleteMemberDetail" parameterType="map">
		DELETE FROM member_detail
		WHERE num = #{num};
	</delete>
	
	
</mapper>